module.exports.config = {
	name: "joinNoti",
	eventType: ["log:subscribe"],
	version: "1.0.1",
	credits: "ZINO",
	description: "Notify bot or group member with random gif/photo/video",
	dependencies: {
		"fs-extra": "",
		"path": ""
	}
};

module.exports.onLoad = function () {
    const { existsSync, mkdirSync } = global.nodemodule["fs-extra"];
    const { join } = global.nodemodule["path"];

	const path = join(__dirname, "cache", "joinGif");
	if (existsSync(path)) mkdirSync(path, { recursive: true });	

	const path2 = join(__dirname, "cache", "joinGif", "randomgif");
    if (!existsSync(path2)) mkdirSync(path2, { recursive: true });

    return;
}


module.exports.run = async function({ api, event, Users, Threads }) {
    const { join } = global.nodemodule["path"];
	const { threadID } = event;
	if (event.logMessageData.addedParticipants.some(i => i.userFbId == api.getCurrentUserID())) {
		api.changeNickname(` ${global.config.PREFIX}  ${(!global.config.BOTNAME) ? "¬´ ùíÉùíêùíï ‚Üí ùíÉùíÇ ùíâùíÉ ùíñùíâ ¬ª„Ää ÿ≤Ÿäÿ±Ÿà „Äã" : global.config.BOTNAME}`, threadID, api.getCurrentUserID());
		return api.sendMessage(`‚ñÇ‚ñÉ‚ñÖ‚ñÜÿ™ÿ≠ŸÖŸäŸÑ...ùüèùüéùüé%‚ñÜ‚ñÖ‚ñÉ‚ñÇ\n‚´∏ ÿ™ŸÖ ÿßŸÑÿßÿ™ÿµÿßŸÑ ÿ®ŸÜÿ¨ÿßÿ≠ ‚´∑\n‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë‚á©‚á©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\n[‚öúÔ∏è] \ÿßŸÑŸÖÿßŸÑŸÉ:-   ÿ≤ŸäŸÜŸà [‚öúÔ∏è]\n[‚öúÔ∏è] 1-ŸÑÿß ÿ™ŸÇŸÖ ÿ®ÿπŸÖŸÑ ÿ≥ÿ®ÿßŸÖ\n[‚öúÔ∏è] 2-ŸÑÿß ÿ™ŸÇŸÖ ÿ®ÿ∑ÿ±ÿØ ŸàÿßÿπÿßÿØÿ© ÿßÿ∂ÿßŸÅÿ© ÿßŸÑÿ®Ÿàÿ™\n[‚öúÔ∏è] ŸÑÿ™ÿ±Ÿâ ŸÇÿßÿ¶ŸÖÿ© ÿßŸÑÿßŸàÿßŸÖÿ± ÿßŸÉÿ™ÿ® [ .ÿßŸÑÿßŸàÿßŸÖÿ± ] \n‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë‚áß‚áß‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè
\n‚ùõ‚îÅ‚îÅÔΩ•‚ù™ ÿßŸÑÿ®ÿßÿØÿ¶ÿ© [ . ]‚ù´ÔΩ•‚îÅ‚îÅ‚ùú\n[‚öúÔ∏è] ÿßÿ∞ÿß ŸÉÿßŸÜ ŸÑÿØŸäŸÉ ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ± ŸäŸÖŸÉŸÜŸÉ ÿßŸÑÿ™ŸàÿßÿµŸÑ ŸÖÿπŸä : https://www.facebook.com/mokh.tar.186590\n‚óÜ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n[‚öúÔ∏è] ÿ™ŸÖ ÿµŸÜÿπ Ÿáÿ∞ÿß ÿßŸÑÿ®Ÿàÿ™ \n[ ‚öúÔ∏è ] ÿ®Ÿàÿßÿ≥ÿ∑ÿ©  : Zino  \n[‚öúÔ∏è] ùô∞ùöçùöñùöíùöó :   ///// `, threadID);
	}
  else {
		try {
			const { createReadStream, existsSync, mkdirSync, readdirSync } = global.nodemodule["fs-extra"];
        const moment = require("moment-timezone");
  const time = moment.tz("africa/morocco").format("DD/MM/YYYY || HH:mm:s");
  const hours = moment.tz("africa/morocco").format("HH");
			let { threadName, participantIDs } = await api.getThreadInfo(threadID);
			const threadData = global.data.threadData.get(parseInt(threadID)) || {};
			const path = join(__dirname, "cache", "joinGif");
			const pathGif = join(path, `${threadID}.gif`);

			var mentions = [], nameArray = [], memLength = [], i = 0;
			
			for (id in event.logMessageData.addedParticipants) {
				const userName = event.logMessageData.addedParticipants[id].fullName;
				nameArray.push(userName);
				mentions.push({ tag: userName, id });
				memLength.push(participantIDs.length - i++);
			}
			memLength.sort((a, b) => a - b);
			
			(typeof threadData.customJoin == "undefined") ? msg = "                         {type}  {name} ÿßŸáŸÑÿßŸã [‚öúÔ∏è]\nÿ®ŸÉ ÿ•ŸÑŸâ {threadName}.\n[‚öúÔ∏è] ŸÖŸÜ ÿßŸÑÿßŸÜ {name} ÿ¨ÿ≤ÿ° ŸÖŸÜ Ÿáÿ∞Ÿá ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ© . ŸÑÿß ÿ™ŸÇŸÑŸÇ ŸÑÿ≥ÿ™ Ÿàÿ≠ÿØŸÉ ŸáŸÜÿß . ÿßŸÜÿ™ ÿßŸÑÿπÿ∂Ÿà ÿ±ŸÇŸÖ : {soThanhVien} ŸÅŸä {threadName}.\n[‚öúÔ∏è] ÿßÿ∞ÿß ŸÇŸÖÿ™ ÿ®ÿπŸÖŸÑ ÿ≥ÿ®ÿßŸÖ ÿ≥Ÿäÿ™ŸÖ ÿ∑ÿ±ÿØŸÉ ŸÖŸÜ ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ© \n[‚öúÔ∏è] {session} || {time} ÿßÿ≥ÿ™ŸÖÿ™ÿπ": msg = threadData.customJoin;
			msg = msg
                .replace(/\{name}/g, nameArray.join(', '))
                .replace(/\{type}/g, (memLength.length > 1) ? 'Ÿè' : 'Ÿè')
                .replace(/\{soThanhVien}/g, memLength.join(', '))
                .replace(/\{threadName}/g, threadName)
                .replace(/\{session}/g, hours <= 10 ? "ÿßÿ™ŸÖŸÜŸâ ÿßŸÜ ÿ™ÿ≠ÿ∂Ÿâ ÿ®ÿµÿ®ÿßÿ≠ ÿ¨ŸäÿØ" : 
    hours > 10 && hours <= 12 ? "ŸÖÿ≥ÿßÿ° ÿßŸÑÿÆŸäÿ± ŸÑŸÉ" :
    hours > 12 && hours <= 18 ? "ŸÑÿ™ÿ≠ÿ∂Ÿâ ÿ®ŸÑŸäŸÑÿ© ÿ≥ÿπŸäÿØÿ©" : "ŸÑÿ™ÿ≠ÿ∂Ÿâ ÿ®ŸÑŸäŸÑÿ© ÿ≥ÿπŸäÿØÿ©")
                .replace(/\{time}/g, time);  



			if (existsSync(path)) mkdirSync(path, { recursive: true });

			const randomPath = readdirSync(join(__dirname, "cache", "joinGif", "randomgif"));

			if (existsSync(pathGif)) formPush = { body: msg, attachment: createReadStream(pathGif), mentions }
			else if (randomPath.length != 0) {
				const pathRandom = join(__dirname, "cache", "joinGif", "randomgif", `${randomPath[Math.floor(Math.random() * randomPath.length)]}`);
				formPush = { body: msg, attachment: createReadStream(pathRandom), mentions }
			}
			else formPush = { body: msg, mentions }

			return api.sendMessage(formPush, threadID);
      
		} catch (e) { return console.log(e) };
	}
                       }